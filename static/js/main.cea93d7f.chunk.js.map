{"version":3,"sources":["components/AppLayout.js","components/Header.js","utils/useScrollFadeIn.js","components/Container/Profile.js","components/Container/Box/BoxPage.js","components/Container/Box/BoxList.js","components/Container/PostBox.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","styled","Menu","GlobalStyle","I_header","div","Header","useState","header_bb","setHeader_bb","useEffect","setTimeout","className","loop","wrapper","steps","useScrollFadeIn","dom","useRef","handleScroll","useCallback","entry","current","isIntersecting","style","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","opacity","transform","observer","IntersectionObserver","threshold","observe","disconnect","ref","Container","P_About","Profile","animatedItem","src","alt","h2","props","color","p","Title","P","WhiteBox","BoxList","TextBox","background","Box1","Box2","Box3","Component","PostBox","Button","button","PostBoxs","boxStyle","setBoxStyle","console","log","onChangeBox","e","target","name","onClick","BoxRender","Footers","Footer","href","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cea93d7f.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'antd';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n.TopPoint {\r\n  position:relative;\r\n}\r\n.fixedMenu {\r\n  position: fixed;\r\n  top: 0px;\r\n  left:0px;\r\n}\r\n`\r\n\r\nconst T_Menu = styled(Menu)`\r\n  position: absolute;\r\n  top:640px;\r\n  background: rgba(157,191,228,0.8);\r\n  border:none;\r\n  width: 100%;\r\n  z-index:999;\r\n  padding-left: 0;\r\n  margin:0;\r\n  transition:position 2s;\r\n  * {\r\n    float:right;\r\n  }\r\n  .Logo {\r\n    float:left;\r\n    padding: 0;\r\n    img {\r\n      width: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [topDown,setTopDown] = useState(true)\r\n  const [topShow,setTopShow] = useState(false)\r\n  const [Layoutfixed, setLayoutfixed] = useState(false)\r\n\r\n      useEffect(() => {\r\n        window.addEventListener('scroll', onScroll);\r\n        // 스크롤 이벤트가 발생하면 onScroll 함수 실행\r\n        console.log(onScroll.scrollTop)\r\n      }, [])\r\n      \r\n      const onScroll = () => {\r\n        const scrollTop = window.scrollY || document.documentElemen\r\n        // 스크롤 값 구하기\r\n        if(Number(scrollTop) > 640) {\r\n          return setLayoutfixed(true)\r\n        } else {\r\n          return setLayoutfixed(undefined)\r\n        }\r\n      }\r\n\r\n  const topDownPoint = useCallback(() => {\r\n    setTopDown(!topDown)\r\n    setTopShow(!topDown)\r\n  },[topDown])\r\n\r\n  return (\r\n    <div className=\"Layout\">\r\n      <GlobalStyle />\r\n      <T_Menu className={`AppLayout ${Layoutfixed ? \"fixedMenu\" : \"\" }`} mode=\"horizontal\">\r\n        <Menu.Item className=\"Logo\">\r\n            <div>\r\n              <img src=\"https://cdn.crowdpic.net/detail-thumb/thumb_d_63991F3DE8078AE372A3EF381463C4BC.png\" alt=\"\"/>\r\n            </div>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          {/* <a onClick={scrollDown}>＝</a> */}\r\n          <div className=\"TopPoint\" onClick={topDownPoint}>＝</div>\r\n        </Menu.Item>\r\n      </T_Menu>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node.isRequired, // return 안에 들어갈 수 있는 모든것들이 node\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Typical from 'react-typical';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  .header-bb {\r\n    position: relative;\r\n    background: none;\r\n    &:after {\r\n      background-image: url('https://www.10wallpaper.com/wallpaper/1366x768/1206/city_night_fantasy-Dreamy_and_Fantasy_wallpaper_1366x768.jpg');\r\n      background-repeat: no-repeat;\r\n      background-attachment: fixed;\r\n      background-size:cover;\r\n      top:0;\r\n      left:0;\r\n      position:absolute;\r\n      opacity:0.5!important;\r\n      filter:alpha(opacity=50);\r\n      z-index:-1;\r\n      content:\"\";\r\n      width:100%;\r\n      height:100%;\r\n      }\r\n  } \r\n`\r\n\r\nconst I_header = styled.div`\r\n  background: #bae7f5;\r\n  width: 100%;\r\n  height: 40rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition:background 2s;\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 6vw;\r\n  }\r\n  p {\r\n    font-size: 1.5rem;\r\n  }\r\n`\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const [header_bb, setHeader_bb] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setHeader_bb(true)\r\n    },3000)\r\n  }, [header_bb])\r\n  return (\r\n    <>\r\n    <GlobalStyle />\r\n      <I_header className={`${header_bb ? 'header-bb' : ''}`}>\r\n        <Typical\r\n          loop={1}\r\n          wrapper=\"h1\"\r\n          steps={[\r\n            'Frontend', 200,\r\n            'Frontend Developer'\r\n          ]}\r\n        />\r\n        <p>Junho-Ham</p>\r\n      </I_header>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import { useRef, useCallback, useEffect } from 'react'\r\n\r\nconst useScrollFadeIn = () => {\r\n  const dom = useRef(); // Animation 트리거 이벤트를 DOM에 지정하기 위해서 사용\r\n\r\n  const handleScroll = useCallback(([entry]) => {\r\n    /// entry == InterSectionObserverEntry의 인스턴스 배열..이라고 함\r\n    const { current } = dom;\r\n\r\n    if(entry.isIntersecting) { //entry의 교차상태..? TODO:이게뭐지\r\n      current.style.transitionProperty = 'opacity transform';\r\n      current.style.transitionDuration = '1s';\r\n      current.style.transitionTimingFunction = 'cubic-bezier(0, 0, 0.2, 1)';\r\n      current.style.transitionDelay = '0s';\r\n      current.style.opacity = 1;\r\n      current.style.transform = 'translate3d(0, 0, 0)';\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let observer;\r\n    const { current } = dom;\r\n\r\n    if (current) {\r\n      observer = new IntersectionObserver(handleScroll, { threshold: 0.3 });\r\n      // 동작하게 할 함수, Observer 세팅값(thresshold는 TargetElement의 노출비율로 0.7은 70%가 노출되었을때 이벤트 발생, 값은 number나 Array로, Default는 0)\r\n      observer.observe(current); // current 요소의 관찰을 시작\r\n\r\n      return () => observer && observer.disconnect(); // observer가 true면 관찰중지\r\n    }\r\n  }, [handleScroll])\r\n  return {\r\n    ref: dom,\r\n    style: {\r\n      opacity: 0,\r\n      transform: 'translate3d(0,50%,0)',\r\n    }\r\n  }\r\n}\r\n\r\nexport default useScrollFadeIn;\r\n","import React from 'react';\r\nimport useScrollFadeIn from '../../utils/useScrollFadeIn';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n`\r\nconst Container = styled.div`\r\n  background: white;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content:center;\r\n  align-items: center;\r\n  .profile_h2 > h2 {\r\n    color: pink;\r\n    margin-top: 2rem;\r\n    font-size: 5vw;\r\n  }\r\n  `\r\n\r\nconst P_About = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content:center;\r\n  .intro {\r\n    width: 600px;\r\n    margin: 2rem 0;\r\n    background:gray;\r\n    border-radius: 5px;\r\n    margin-top: 3px;\r\n    padding: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    ul {\r\n      padding: 0 20px;\r\n      li {\r\n        text-align:left;\r\n        font-size: 1.2rem;\r\n        font-weight: 500;\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        margin-bottom: 0;\r\n        text-align: left;\r\n      }\r\n    }\r\n    img {\r\n      width: 150px;\r\n      height:200px;\r\n    }\r\n  @media (max-width: 700px) {\r\n    width: 300px;\r\n    flex-direction:column;\r\n    padding: 1rem;\r\n    ul {\r\n      padding: 0px;\r\n      li {\r\n        text-align:center;\r\n        font-size: 1rem;\r\n        font-weight: 500;\r\n      }\r\n      p {\r\n        text-align: center;\r\n        font-size: 0.8rem\r\n      }\r\n    }\r\n    img {\r\n      margin:10px 0;\r\n      width: 100px;\r\n      height: 130px;\r\n    }\r\n  }\r\n  }\r\n\r\n  \r\n`\r\n\r\nconst Profile = () => {\r\n\r\n  const animatedItem = useScrollFadeIn();\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Container>\r\n        <div className=\"profile_h2\">\r\n          <h2>Who's this guy?</h2>\r\n        </div>\r\n        <P_About {...animatedItem}>\r\n          <div className=\"intro\">\r\n            <img src=\"http://placehold.it/150x200\" alt=\"\"></img>\r\n            <ul>\r\n              <li>Ham Jun Ho</li>\r\n              <li>1995-10-26</li>\r\n              <p>나는 너의 다운타운 베이비야</p>\r\n            </ul>\r\n          </div>\r\n        </P_About>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h2`\r\n  margin-top: 1.5rem;\r\n  color: ${props => props.color || \"black\"};\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  div {\r\n    border-bottom: 3px solid ${props => props.color || \"black\"};\r\n  }\r\n`\r\nconst P = styled.p`\r\n  color: ${props => props.color || \"black\"};\r\n`\r\nconst TextBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 1rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  img {\r\n    width: 100%;\r\n  }\r\n  * {\r\n  flex-wrap: wrap;\r\n  }\r\n`\r\n\r\nexport const LandingPage = () => {\r\n  return (\r\n    <TextBox>\r\n      <Title>LandingPage</Title>\r\n      <img src=\"http://localhost:3000/LandingPage.jpg\" alt=\"\"/>\r\n      <P>12345</P>\r\n\r\n    </TextBox>\r\n  )\r\n}\r\n\r\nexport const PortFolio = () => {\r\n  return (\r\n    <TextBox>\r\n      <Title>PortFolio</Title>\r\n      <P>12345</P>\r\n\r\n    </TextBox>\r\n  )\r\n}","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components';\r\nimport { LandingPage, PortFolio } from './BoxPage';\r\nconst Title = styled.h2`\r\n  margin-top: 1.5rem;\r\n  color: ${props => props.color || \"black\"};\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  div {\r\n    border-bottom: 3px solid ${props => props.color || \"black\"};\r\n  }\r\n`\r\nconst P = styled.p`\r\n  color: ${props => props.color || \"black\"};\r\n`\r\n\r\nconst WhiteBox = styled.div`\r\n  background: white;\r\n  width: 250px;\r\n`\r\nconst BoxList = styled.div`\r\n    img {\r\n      width:24px;\r\n      height:24px;\r\n      margin: 0 6px;\r\n    }\r\n    text-align:left;\r\n    padding: 3px 0;\r\n    color: black;\r\n    margin: 3px 4px;\r\n    & + & {\r\n      border-top: 1px solid #333333\r\n\r\n    }`\r\n\r\nconst GridBox = styled.div`\r\n  display: flex;\r\n  justify-content:center;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n  width: 100vw;\r\n  height: 500px;\r\n  padding-bottom: 1rem;\r\n`\r\n\r\nconst InnerBox = styled.div`\r\n    width: 170px;\r\n    height: 230px;\r\n    margin: 5px;\r\n    background: ${props => props.background || \"none\"};\r\n    border: 2px solid black;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 1;\r\n    transition: border .3s;\r\n    span {\r\n      font-size: 1.3rem;\r\n  }\r\n  &:hover {\r\n    border: 2px solid #dddddd;\r\n    overflow: 1;\r\n  }\r\n  `\r\n\r\nconst TextBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\n\r\nexport const Box1 = () => {\r\n  return (\r\n    <TextBox>\r\n      <Title><div>SKILL</div></Title>\r\n      <P>누르면 바뀌는 내용</P>\r\n      <WhiteBox>\r\n        <BoxList><img src=\"http://placehold.it/24x24\" alt=\"\"/>\r\n        <span>HTML / CSS </span>\r\n        </BoxList>\r\n        <BoxList><img src=\"http://placehold.it/24x24\" alt=\"\"/><span>JavaScript</span></BoxList>\r\n        <BoxList><img src=\"https://cdn.worldvectorlogo.com/logos/react-1.svg\" alt=\"\"/><span>React</span></BoxList>\r\n        <BoxList><img src=\"http://placehold.it/24x24\" alt=\"\"/><span>Node</span></BoxList>\r\n        <BoxList><img src=\"http://placehold.it/24x24\" alt=\"\"/><span>Git</span></BoxList>\r\n      </WhiteBox>\r\n    </TextBox>\r\n  )\r\n}\r\n\r\nexport const Box2 = () => {\r\n\r\n  return (\r\n    <TextBox>\r\n      <Title color=\"white\"><div>PortFolio</div></Title>\r\n      <P color=\"white\">내용내용</P>\r\n    </TextBox>\r\n  )\r\n}\r\n\r\n\r\nexport const Box3 = () => {\r\n  return (\r\n    <TextBox>\r\n      <Title><div>초록색 타이틀</div></Title>\r\n      <P>~~~~~~~~</P>\r\n    </TextBox>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Box1, Box2, Box3 } from './Box/BoxList';\r\n\r\nconst Component = styled.div`\r\n  display: flex;\r\n  justify-content:center;\r\n  align-items: center;\r\n  margin: 2rem 0;\r\n  height: 600px;\r\n  transform: skewY(-5deg);\r\n  background: ${props => props.background || \"#4f2ddf\"};\r\n  transition: background 0.3s;\r\n  position: relative;\r\n`\r\nconst PostBox = styled.div`\r\n  width:100%;\r\n  height: 500px;\r\n  border-radius: 2px;\r\n  background: ${props => props.background};\r\n  text-align:center;\r\n  margin: 0 3rem;\r\n  transform: skewY(5deg);\r\n  transition: background 0.3s;\r\n  @media (max-width: 700px) {\r\n    margin: 1rem;\r\n  }\r\n    .Buttons {\r\n      position: absolute;\r\n      display: flex;\r\n      top: 1rem;\r\n      left: 9rem;\r\n      transform: skewY(-5deg);\r\n      flex-direction: column;\r\n      transition: top 1s, left 1s; \r\n      @media (max-width: 700px) {\r\n        top: -1.6rem;\r\n        left: 2rem;\r\n      }\r\n      @media (max-width: 425px) {\r\n        top: -1.3rem;\r\n        left: 2rem;\r\n      }\r\n    }\r\n    .InText {\r\n      padding: 20px;\r\n      overflow:hidden;\r\n    }\r\n`\r\nconst Button = styled.button`\r\n  background: ${props => props.background || \"white\"};\r\n  opacity: 0.5;\r\n  color: white;\r\n  width: 70px;\r\n  outline:none;\r\n  border: none;\r\n  text-align:left;\r\n  border-radius: 2px 0 0 5px;\r\n  margin: 2px;\r\n    &:hover {\r\n      cursor:pointer;\r\n      opacity: 1;\r\n    }\r\n    &:focus {\r\n      z-index: 1;\r\n      opacity: 1;\r\n    }\r\n    & + & {\r\n      margin-top: 5px;\r\n    }\r\n`\r\nconst PostBoxs = () => {\r\n  const [boxStyle, setBoxStyle] = useState(\"#4f2ddf\");\r\n\r\n  useEffect(() => {\r\n    console.log(boxStyle)\r\n  }, [boxStyle])\r\n\r\n  const onChangeBox = (e) => {\r\n    setBoxStyle(e.target.name)\r\n  }\r\n  \r\n  const BoxRender = () => {\r\n    switch(boxStyle) {\r\n      case \"red\" : return <Box1 />;\r\n      case \"#4f2ddf\" : return <Box2 />;\r\n      case \"green\" : return <Box3 />;\r\n      default: return <Box1 />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Component background={boxStyle}>\r\n      <PostBox>\r\n        <div className=\"InText\">\r\n        <div className=\"Buttons\">\r\n          <Button background=\"#ffbbbb\" name=\"#ffbbbb\" onClick={onChangeBox}>SKILL</Button>\r\n          <Button background=\"#4f2ddf\" name=\"#4f2ddf\" onClick={onChangeBox}>PortFolio</Button>\r\n          <Button background=\"green\" name=\"green\" onClick={onChangeBox}>None</Button>\r\n        </div>\r\n          { BoxRender() }\r\n        </div>\r\n      </PostBox>\r\n    </Component>\r\n  )\r\n}\r\n\r\nexport default PostBoxs;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Footers = styled.div`\r\n  background: black;\r\n  display: flex;\r\n  margin-top: 6rem;\r\n  padding: 2rem 0rem 3rem;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 99;\r\n  p {\r\n    margin-bottom: 2px;\r\n  }\r\n  h2 {\r\n    font-size:1.5rem;\r\n    padding-bottom: 3px;\r\n    border-bottom : 2px solid white;\r\n  }\r\n  * {\r\n    color: white;\r\n  }\r\n  .links {\r\n    display: flex;\r\n    .moveit {\r\n      margin: 0.5rem;\r\n      background: white;\r\n      width: 64px;\r\n      height: 64px;\r\n      border-radius:50px;\r\n      display: flex;\r\n      align-items:center;\r\n      justify-content: center;\r\n      transition: background 2s;\r\n       &:hover {\r\n         background: #454545;\r\n         cursor:pointer;\r\n       }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <Footers>\r\n      <h2>CONTANT</h2>\r\n      <p><span>Phone : </span>010-1234-5678</p>\r\n      <p><span>Mail : </span>MyMail@gmail.com</p>\r\n      <div className=\"links\">\r\n        <a href=\"https://github.com/beginal\" target=\"blank\">\r\n          <div className=\"moveit\">\r\n            <img src=\"http://placehold.it/30x30\" alt=\"github\" ></img>\r\n          </div>\r\n        </a>\r\n        <a href=\"/\">\r\n          <div className=\"moveit\">\r\n            <img src=\"http://placehold.it/30x30\" alt=\"\" ></img>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </Footers>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport AppLayout from './components/AppLayout';\nimport Header from './components/Header';\nimport Profile from './components/Container/Profile';\nimport PostBox from './components/Container/PostBox.js'\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst Home = () => {\n\n  return (\n    <>\n      <Header />\n      <Profile />\n      <PostBox />\n      <Footer />\n    </>\n  )\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}